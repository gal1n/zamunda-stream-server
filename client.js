
const SERVER_URL = 'https://zamunda-stream-server.onrender.com';
const player = videojs('videoPlayer');
const logArea = document.getElementById('log');
const fileListArea = document.getElementById('fileList');

function log(msg) {
  const time = new Date().toLocaleTimeString();
  const entry = document.createElement('div');
  entry.textContent = `[${time}] ${msg}`;
  logArea.appendChild(entry);
  logArea.scrollTop = logArea.scrollHeight;
}

document.getElementById('magnetBtn').onclick = () => {
  const magnet = document.getElementById('magnetInput').value.trim();
  if (!magnet) return alert('–í—ä–≤–µ–¥–∏ magnet –ª–∏–Ω–∫');
  fetchFileList(magnet);
};

async function fetchFileList(magnetURI) {
  log('üîó –ò–∑–ø—Ä–∞—â–∞–º magnet –ª–∏–Ω–∫ –∫—ä–º —Å—ä—Ä–≤—ä—Ä–∞: ' + magnetURI);
  try {
    const res = await fetch(`${SERVER_URL}/get-files?magnet=${encodeURIComponent(magnetURI)}`);
    const data = await res.json();
    if (!Array.isArray(data.files)) {
      log('‚ùå –ì—Ä–µ—à–∫–∞: –ù–µ–≤–∞–ª–∏–¥–µ–Ω —Å–ø–∏—Å—ä–∫ —Å —Ñ–∞–π–ª–æ–≤–µ');
      return;
    }
    log('üé¨ –ù–∞–ª–∏—á–Ω–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤–µ: ' + data.files.join(', '));
    displayFileList(data.files, magnetURI);
  } catch (err) {
    log('‚ùå –ì—Ä–µ—à–∫–∞: ' + err);
  }
}

function displayFileList(files, magnetURI) {
  fileListArea.innerHTML = '';
  files.forEach(file => {
    const btn = document.createElement('button');
    btn.textContent = `‚ñ∂Ô∏è –ü—É—Å–Ω–∏: ${file}`;
    btn.onclick = () => {
      const videoURL = `${SERVER_URL}/stream?magnet=${encodeURIComponent(magnetURI)}&filename=${encodeURIComponent(file)}`;
      log('üìΩÔ∏è –°—Ç–∞—Ä—Ç–∏—Ä–∞–º –≤–∏–¥–µ–æ: ' + file);
      player.src({ type: 'video/mp4', src: videoURL });
      player.play();
    };
    fileListArea.appendChild(btn);
  });
}
