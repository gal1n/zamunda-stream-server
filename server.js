const express = require('express');
const WebTorrent = require('webtorrent');
const cors = require('cors');

const app = express();
const client = new WebTorrent();
app.use(cors());

const PORT = process.env.PORT || 10000;

app.get('/stream', (req, res) => {
  const magnet = req.query.magnet;
  if (!magnet) return res.status(400).send('–õ–∏–ø—Å–≤–∞ magnet –ª–∏–Ω–∫');

  console.log('‚è≥ –î–æ–±–∞–≤—è–º —Ç–æ—Ä–µ–Ω—Ç:', magnet);

  client.add(magnet, torrent => {
    const file = torrent.files.find(f => f.name.match(/\.(mp4|mkv|webm|avi)$/i));
    if (!file) return res.status(404).send('–ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω –≤–∏–¥–µ–æ —Ñ–∞–π–ª');

    // –í—Ä—ä—â–∞–Ω–µ –Ω–∞ —Å–ø–∏—Å—ä–∫ —Å —Ñ–∞–π–ª–æ–≤–µ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞
    const fileNames = torrent.files.map(f => f.name);

    console.log('‚ñ∂Ô∏è –°—Ç—Ä–∏–π–º —Ñ–∞–π–ª:', file.name);
    
    // –ü–æ–∫–∞–∑–≤–∞–º–µ —Ñ–∞–π–ª–æ–≤–µ—Ç–µ –≤ –∫–æ–Ω–∑–æ–ª–∞—Ç–∞ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞
    console.log('üé¨ –ù–∞–ª–∏—á–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ:', fileNames);

    // –ò–∑–ø—Ä–∞—â–∞–º–µ —Å–ø–∏—Å—ä–∫–∞ —Å —Ñ–∞–π–ª–æ–≤–µ—Ç–µ –∫—ä–º –∫–ª–∏–µ–Ω—Ç–∞
    res.json({ files: fileNames });

    // –°—Ç—Ä–∏–π–º–∏–Ω–≥ –Ω–∞ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–∞
    res.setHeader('Content-Type', 'video/mp4');
    res.setHeader('Accept-Ranges', 'bytes');

    const range = req.headers.range;
    if (range) {
      const parts = range.replace(/bytes=/, '').split('-');
      const start = parseInt(parts[0], 10);
      const end = parts[1] ? parseInt(parts[1], 10) : file.length - 1;

      res.status(206);
      res.setHeader('Content-Range', `bytes ${start}-${end}/${file.length}`);
      res.setHeader('Content-Length', end - start + 1);
      file.createReadStream({ start, end }).pipe(res);
    } else {
      res.setHeader('Content-Length', file.length);
      file.createReadStream().pipe(res);
    }
  });
});

app.listen(PORT, () => {
  console.log(`‚úÖ WebTorrent —Å—ä—Ä–≤—ä—Ä—ä—Ç —Ä–∞–±–æ—Ç–∏ –Ω–∞ http://localhost:${PORT}`);
});
